/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as dashboardRouteRouteImport } from './routes/(dashboard)/route'
import { Route as dashboardIndexRouteImport } from './routes/(dashboard)/index'
import { Route as dashboardSearchRouteImport } from './routes/(dashboard)/search'
import { Route as dashboardFollowRouteImport } from './routes/(dashboard)/follow'
import { Route as authRegisterRouteImport } from './routes/(auth)/register'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as dashboardProfileIndexRouteImport } from './routes/(dashboard)/profile/index'
import { Route as dashboardPostIndexRouteImport } from './routes/(dashboard)/post/index'
import { Route as dashboardProfileUsernameRouteImport } from './routes/(dashboard)/profile/$username'
import { Route as dashboardPostPostIdRouteImport } from './routes/(dashboard)/post/$postId'
import { Route as authPasswordForgotRouteImport } from './routes/(auth)/password/forgot'
import { Route as authPasswordResetTokenRouteImport } from './routes/(auth)/password/reset/$token'

const dashboardRouteRoute = dashboardRouteRouteImport.update({
  id: '/(dashboard)',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardIndexRoute = dashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => dashboardRouteRoute,
} as any)
const dashboardSearchRoute = dashboardSearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => dashboardRouteRoute,
} as any)
const dashboardFollowRoute = dashboardFollowRouteImport.update({
  id: '/follow',
  path: '/follow',
  getParentRoute: () => dashboardRouteRoute,
} as any)
const authRegisterRoute = authRegisterRouteImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardProfileIndexRoute = dashboardProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => dashboardRouteRoute,
} as any)
const dashboardPostIndexRoute = dashboardPostIndexRouteImport.update({
  id: '/post/',
  path: '/post/',
  getParentRoute: () => dashboardRouteRoute,
} as any)
const dashboardProfileUsernameRoute =
  dashboardProfileUsernameRouteImport.update({
    id: '/profile/$username',
    path: '/profile/$username',
    getParentRoute: () => dashboardRouteRoute,
  } as any)
const dashboardPostPostIdRoute = dashboardPostPostIdRouteImport.update({
  id: '/post/$postId',
  path: '/post/$postId',
  getParentRoute: () => dashboardRouteRoute,
} as any)
const authPasswordForgotRoute = authPasswordForgotRouteImport.update({
  id: '/(auth)/password/forgot',
  path: '/password/forgot',
  getParentRoute: () => rootRouteImport,
} as any)
const authPasswordResetTokenRoute = authPasswordResetTokenRouteImport.update({
  id: '/(auth)/password/reset/$token',
  path: '/password/reset/$token',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof dashboardIndexRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/follow': typeof dashboardFollowRoute
  '/search': typeof dashboardSearchRoute
  '/password/forgot': typeof authPasswordForgotRoute
  '/post/$postId': typeof dashboardPostPostIdRoute
  '/profile/$username': typeof dashboardProfileUsernameRoute
  '/post': typeof dashboardPostIndexRoute
  '/profile': typeof dashboardProfileIndexRoute
  '/password/reset/$token': typeof authPasswordResetTokenRoute
}
export interface FileRoutesByTo {
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/follow': typeof dashboardFollowRoute
  '/search': typeof dashboardSearchRoute
  '/': typeof dashboardIndexRoute
  '/password/forgot': typeof authPasswordForgotRoute
  '/post/$postId': typeof dashboardPostPostIdRoute
  '/profile/$username': typeof dashboardProfileUsernameRoute
  '/post': typeof dashboardPostIndexRoute
  '/profile': typeof dashboardProfileIndexRoute
  '/password/reset/$token': typeof authPasswordResetTokenRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(dashboard)': typeof dashboardRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/(dashboard)/follow': typeof dashboardFollowRoute
  '/(dashboard)/search': typeof dashboardSearchRoute
  '/(dashboard)/': typeof dashboardIndexRoute
  '/(auth)/password/forgot': typeof authPasswordForgotRoute
  '/(dashboard)/post/$postId': typeof dashboardPostPostIdRoute
  '/(dashboard)/profile/$username': typeof dashboardProfileUsernameRoute
  '/(dashboard)/post/': typeof dashboardPostIndexRoute
  '/(dashboard)/profile/': typeof dashboardProfileIndexRoute
  '/(auth)/password/reset/$token': typeof authPasswordResetTokenRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/follow'
    | '/search'
    | '/password/forgot'
    | '/post/$postId'
    | '/profile/$username'
    | '/post'
    | '/profile'
    | '/password/reset/$token'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/register'
    | '/follow'
    | '/search'
    | '/'
    | '/password/forgot'
    | '/post/$postId'
    | '/profile/$username'
    | '/post'
    | '/profile'
    | '/password/reset/$token'
  id:
    | '__root__'
    | '/(dashboard)'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/(dashboard)/follow'
    | '/(dashboard)/search'
    | '/(dashboard)/'
    | '/(auth)/password/forgot'
    | '/(dashboard)/post/$postId'
    | '/(dashboard)/profile/$username'
    | '/(dashboard)/post/'
    | '/(dashboard)/profile/'
    | '/(auth)/password/reset/$token'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  dashboardRouteRoute: typeof dashboardRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
  authPasswordForgotRoute: typeof authPasswordForgotRoute
  authPasswordResetTokenRoute: typeof authPasswordResetTokenRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(dashboard)': {
      id: '/(dashboard)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/': {
      id: '/(dashboard)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof dashboardIndexRouteImport
      parentRoute: typeof dashboardRouteRoute
    }
    '/(dashboard)/search': {
      id: '/(dashboard)/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof dashboardSearchRouteImport
      parentRoute: typeof dashboardRouteRoute
    }
    '/(dashboard)/follow': {
      id: '/(dashboard)/follow'
      path: '/follow'
      fullPath: '/follow'
      preLoaderRoute: typeof dashboardFollowRouteImport
      parentRoute: typeof dashboardRouteRoute
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/profile/': {
      id: '/(dashboard)/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof dashboardProfileIndexRouteImport
      parentRoute: typeof dashboardRouteRoute
    }
    '/(dashboard)/post/': {
      id: '/(dashboard)/post/'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof dashboardPostIndexRouteImport
      parentRoute: typeof dashboardRouteRoute
    }
    '/(dashboard)/profile/$username': {
      id: '/(dashboard)/profile/$username'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof dashboardProfileUsernameRouteImport
      parentRoute: typeof dashboardRouteRoute
    }
    '/(dashboard)/post/$postId': {
      id: '/(dashboard)/post/$postId'
      path: '/post/$postId'
      fullPath: '/post/$postId'
      preLoaderRoute: typeof dashboardPostPostIdRouteImport
      parentRoute: typeof dashboardRouteRoute
    }
    '/(auth)/password/forgot': {
      id: '/(auth)/password/forgot'
      path: '/password/forgot'
      fullPath: '/password/forgot'
      preLoaderRoute: typeof authPasswordForgotRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/password/reset/$token': {
      id: '/(auth)/password/reset/$token'
      path: '/password/reset/$token'
      fullPath: '/password/reset/$token'
      preLoaderRoute: typeof authPasswordResetTokenRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface dashboardRouteRouteChildren {
  dashboardFollowRoute: typeof dashboardFollowRoute
  dashboardSearchRoute: typeof dashboardSearchRoute
  dashboardIndexRoute: typeof dashboardIndexRoute
  dashboardPostPostIdRoute: typeof dashboardPostPostIdRoute
  dashboardProfileUsernameRoute: typeof dashboardProfileUsernameRoute
  dashboardPostIndexRoute: typeof dashboardPostIndexRoute
  dashboardProfileIndexRoute: typeof dashboardProfileIndexRoute
}

const dashboardRouteRouteChildren: dashboardRouteRouteChildren = {
  dashboardFollowRoute: dashboardFollowRoute,
  dashboardSearchRoute: dashboardSearchRoute,
  dashboardIndexRoute: dashboardIndexRoute,
  dashboardPostPostIdRoute: dashboardPostPostIdRoute,
  dashboardProfileUsernameRoute: dashboardProfileUsernameRoute,
  dashboardPostIndexRoute: dashboardPostIndexRoute,
  dashboardProfileIndexRoute: dashboardProfileIndexRoute,
}

const dashboardRouteRouteWithChildren = dashboardRouteRoute._addFileChildren(
  dashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  dashboardRouteRoute: dashboardRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
  authPasswordForgotRoute: authPasswordForgotRoute,
  authPasswordResetTokenRoute: authPasswordResetTokenRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
